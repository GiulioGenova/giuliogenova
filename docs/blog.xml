<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Giulio&#39;s Blog</title>
<link>https://giuliogenova.com/blog.html</link>
<atom:link href="https://giuliogenova.com/blog.xml" rel="self" type="application/rss+xml"/>
<description>A collection of technical blogs and tips on coding, machine learning and spatial data science.</description>
<image>
<url>https://giuliogenova.com/quarto.png</url>
<title>Giulio&#39;s Blog</title>
<link>https://giuliogenova.com/blog.html</link>
<height>86</height>
<width>144</width>
</image>
<generator>quarto-1.3.340</generator>
<lastBuildDate>Sat, 13 Jan 2024 23:00:00 GMT</lastBuildDate>
<item>
  <title>Reading Assets from Google Earth Engine with GDAL and R {terra}</title>
  <dc:creator>Giulio Genova</dc:creator>
  <link>https://giuliogenova.com/blog/posts/GEE/index.html</link>
  <description><![CDATA[ 



<p><img src="https://giuliogenova.com/blog/posts/GEE/DALL·E 2024-01-14 16.48.53 - The image depicts a wide-angle view of a computer setup with a large monitor displaying a complex spatial layer, similar to those seen in Google Earth.png" class="img-fluid"></p>
<section id="intro-and-aim" class="level1">
<h1>Intro and Aim</h1>
<p>Google Earth Engine (GEE) stores petabytes of Earth Observation data and more. The great aspect is that you can perform analyses directly in the cloud. This means that, in principle, you only need to extract your results (summary statistics, plots, final maps, etc.) from GEE. However, there are times when you want to conduct part of your analysis using your own system. For these instances, accessing (or downloading) raw or preprocessed data from GEE becomes necessary.</p>
<p>Recently, <a href="https://github.com/google/Xee">XEE</a> emerged as a potential game-changer. But there’s another, perhaps overlooked, method for accessing GEE data directly from your machine: using GDAL and any software built on it, like the R {terra} package.</p>
<p>I was inspired by <a href="https://humus.rocks/post/2022/06/23/using-the-terra-r-package-to-view-download-and-analyze-google-earth-engine-images/">Andrew Brown’s blog post</a> and decided to try it out myself.</p>
</section>
<section id="stack-requirements" class="level1">
<h1>Stack Requirements</h1>
<p>Ensure you have the following:</p>
<ul>
<li><a href="https://code.earthengine.google.com/">GEE account (and a connected Google Cloud project, created with your GEE account)</a></li>
<li><a href="https://gdal.org/download.html">GDAL</a></li>
<li><a href="https://www.r-project.org/">R</a> and the <a href="https://cran.r-project.org/web/packages/terra/index.html">{terra} package</a></li>
</ul>
</section>
<section id="setup" class="level1">
<h1>Setup</h1>
<p>Follow these steps to access GEE data from your machine:</p>
<ol type="1">
<li>Go to https://console.cloud.google.com/</li>
<li>Select the cloud project you use with Google Earth Engine.</li>
<li>Navigate to APIs and Services and enable the Google Earth Engine API.</li>
<li>Create a service account.</li>
<li>Generate a credentials .json file and save it on your machine.</li>
</ol>
</section>
<section id="gdal-on-linux" class="level1">
<h1>GDAL (on Linux)</h1>
<p>With everything set up, we can access the data. GDAL, as a command-line tool, is both convenient and powerful.</p>
<p>I chose the DEM <a href="https://developers.google.com/earth-engine/datasets/catalog/MERIT_DEM_v1_0_3">Merit</a> dataset for this example. It’s a single, global image with one band (“dem”), simplifying the process for demonstration purposes.</p>
<p>First, I create an environment variable with the location of my credentials file.</p>
<p>Then, I use <code>gdalinfo</code> on the dataset location, adding the “EEDAI:” prefix. This tells GDAL that the dataset is stored on Google Earth Engine and to use the appropriate protocol.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">export</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">GOOGLE_APPLICATION_CREDENTIALS</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$HOME</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/gee/ee-credentials.json"</span></span>
<span id="cb1-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">gdalinfo</span> EEDAI:MERIT/DEM/v1_0_3</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Driver: EEDAI/Earth Engine Data API Image
Files: none associated
Size is 432000, 174000
Coordinate System is:
GEOGCRS["WGS 84",
    DATUM["World Geodetic System 1984",
        ELLIPSOID["WGS 84",6378137,298.257223563,
            LENGTHUNIT["metre",1]]],
    PRIMEM["Greenwich",0,
        ANGLEUNIT["degree",0.0174532925199433]],
    CS[ellipsoidal,2],
        AXIS["geodetic latitude (Lat)",north,
            ORDER[1],
            ANGLEUNIT["degree",0.0174532925199433]],
        AXIS["geodetic longitude (Lon)",east,
            ORDER[2],
            ANGLEUNIT["degree",0.0174532925199433]],
    ID["EPSG",4326]]
Data axis to CRS axis mapping: 2,1
Origin = (-180.000416666666666,84.999583333333334)
Pixel Size = (0.000833333333333,-0.000833333333333)
Corner Coordinates:
Upper Left  (-180.0004167,  84.9995833) (180d 0' 1.50"W, 84d59'58.50"N)
Lower Left  (-180.0004167, -60.0004167) (180d 0' 1.50"W, 60d 0' 1.50"S)
Upper Right ( 179.9995833,  84.9995833) (179d59'58.50"E, 84d59'58.50"N)
Lower Right ( 179.9995833, -60.0004167) (179d59'58.50"E, 60d 0' 1.50"S)
Center      (  -0.0004167,  12.4995833) (  0d 0' 1.50"W, 12d29'58.50"N)
Band 1 Block=256x256 Type=Float32, ColorInterp=Undefined
  Description = dem
  Overviews: 216000x87000, 108000x43500, 54000x21750, 27000x10875, 13500x5437, 6750x2718, 3375x1359, 1687x679, 843x339, 421x169, 210x84</code></pre>
</div>
</div>
<p>With this, you’ll get information about the dataset.</p>
<p>Once confirmed it’s working, you can use other GDAL tools like <code>gdalwarp</code>, <code>gdal_translate</code>, etc.</p>
</section>
<section id="r-terra" class="level1">
<h1>R Terra</h1>
<p>{terra} uses GDAL to read raster data, meaning the same dataset can be read into R just as we did with GDAL.</p>
<p>Similar to the GDAL example, we set an environment variable for the credentials file and then read the dataset (with “EEDAI:”) using the <code>rast()</code> function.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(terra)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>terra 1.7.37</code></pre>
</div>
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Sys.setenv</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">GOOGLE_APPLICATION_CREDENTIALS=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">file.path</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">path.expand</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'~'</span>),<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gee/ee-credentials.json"</span>))</span>
<span id="cb5-2"></span>
<span id="cb5-3">rst <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rast</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"EEDAI:MERIT/DEM/v1_0_3"</span>)</span></code></pre></div>
</div>
<p>Now, the asset can be accessed with all the functions available in {terra}. We can print the object and plot it. Plotting is fast, even for a global layer at 90 meters resolution, because terra only retrieves a sample of it, just enough to provide a clear image at the needed resolution.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(rst)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>class       : SpatRaster 
dimensions  : 174000, 432000, 1  (nrow, ncol, nlyr)
resolution  : 0.0008333333, 0.0008333333  (x, y)
extent      : -180.0004, 179.9996, -60.00042, 84.99958  (xmin, xmax, ymin, ymax)
coord. ref. : lon/lat WGS 84 (EPSG:4326) 
source      : v1_0_3 
name        : dem </code></pre>
</div>
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(rst, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">range=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5000</span>)) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># wide range for global DEM</span></span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://giuliogenova.com/blog/posts/GEE/index_files/figure-html/unnamed-chunk-3-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>Next, we select a spatial subset using the <code>window()</code> function by defining a bounding box.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1">xmin <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">28</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># bounding box xmin</span></span>
<span id="cb9-2">xmax <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">29</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># bounding box xmax</span></span>
<span id="cb9-3">ymin <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># bounding box ymin</span></span>
<span id="cb9-4">ymax <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># bounding box ymax</span></span>
<span id="cb9-5"></span>
<span id="cb9-6">bb <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ext</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(xmin, xmax, ymin, ymax))</span>
<span id="cb9-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">window</span>(rst) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span></span>
<span id="cb9-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">window</span>(rst) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> bb</span>
<span id="cb9-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(rst)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>class       : SpatRaster 
dimensions  : 1200, 1200, 1  (nrow, ncol, nlyr)
resolution  : 0.0008333333, 0.0008333333  (x, y)
window      : 28.00042, 29.00042, -2.999583, -1.999583  (xmin, xmax, ymin, ymax)
coord. ref. : lon/lat WGS 84 (EPSG:4326) 
source      : v1_0_3 
name        : dem </code></pre>
</div>
</div>
<p>We can now obtain summary statistics from the area with the <code>summary()</code> function.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(rst)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>Warning: [summary] used a sample</code></pre>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>      dem        
 Min.   : 641.1  
 1st Qu.:1175.5  
 Median :1448.5  
 Mean   :1508.9  
 3rd Qu.:1750.8  
 Max.   :3431.0  </code></pre>
</div>
</div>
<p>Finally, plot the area with an appropriate value range.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(rst, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">range=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">650</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3500</span>))</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://giuliogenova.com/blog/posts/GEE/index_files/figure-html/unnamed-chunk-6-1.png" class="img-fluid" width="672"></p>
</div>
</div>


</section>

 ]]></description>
  <category>GEE</category>
  <category>GDAL</category>
  <category>R</category>
  <category>terra</category>
  <guid>https://giuliogenova.com/blog/posts/GEE/index.html</guid>
  <pubDate>Sat, 13 Jan 2024 23:00:00 GMT</pubDate>
  <media:content url="https://earthengine.google.com/static/images/earth-engine-logo.png" medium="image" type="image/png"/>
</item>
<item>
  <title>Solving terra’s “Cannot create raster from single x or y coordinate”</title>
  <dc:creator>Giulio Genova</dc:creator>
  <link>https://giuliogenova.com/blog/posts/R/index.html</link>
  <description><![CDATA[ 



<p><img src="https://giuliogenova.com/blog/posts/R/pattern-8100674_1280_crp.jpg" class="img-fluid"></p>
<p>In R if you want to convert a table (dataframe) having coordinates into a raster you can use the function <code>rast</code> from the {terra} package.</p>
<p>Unfortunately if your dataframe has only one unique x or y coordinate you will get an error. This is because {terra} cannot infer the resolution of the raster.</p>
<p>The exact error you will get is:</p>
<p><code>Error: [rast] cannot create a raster geometry from a single x coordinate</code><br>
or <code>Error: [rast] cannot create a raster geometry from a single y coordinate</code></p>
<p>This was asked on <a href="https://stackoverflow.com/questions/75585028/cannot-create-a-raster-geometry-from-a-single-y-coordinate">Stack Overflow</a> in February 2023</p>
<p>To avoid this error I wrote a function named <code>rast_singlecoord_safe</code> that can be used just like <code>rast</code></p>
<div class="callout callout-style-default callout-warning callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Warning
</div>
</div>
<div class="callout-body-container callout-body">
<p>You need to provide the resolution of the raster. The function assumes squared pixels</p>
</div>
</div>
<p>Here’s the function with a working example:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(terra)</span>
<span id="cb1-2">mydf <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">value =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">42</span>)</span>
<span id="cb1-3"></span>
<span id="cb1-4">rast_singlecoord_safe <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(</span>
<span id="cb1-5">    x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">resolution =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"xyz"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">crs =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>,</span>
<span id="cb1-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">digits =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">extent =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>) {</span>
<span id="cb1-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> ((<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unique</span>(x<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>x)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> (<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unique</span>(x<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>y)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)) {</span>
<span id="cb1-8">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> ( <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.null</span>(resolution)) {</span>
<span id="cb1-9">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stop</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"provide the resolution of the raster"</span>)</span>
<span id="cb1-10">        }</span>
<span id="cb1-11">        additional_coords <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(</span>
<span id="cb1-12">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">min</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unique</span>(x<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>x), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">na.rm =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> resolution,</span>
<span id="cb1-13">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">min</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unique</span>(x<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>y), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">na.rm =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> resolution</span>
<span id="cb1-14">        )</span>
<span id="cb1-15">        additional_coords[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setdiff</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">names</span>(x), <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">names</span>(additional_coords))] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span></span>
<span id="cb1-16">        x <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbind</span>(x, additional_coords)</span>
<span id="cb1-17">        rst <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> terra<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rast</span>(x,</span>
<span id="cb1-18">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type =</span> type, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">crs =</span> crs, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">digits =</span> digits, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">extent=</span>extent</span>
<span id="cb1-19">        )</span>
<span id="cb1-20">        rst <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> terra<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">trim</span>(rst)</span>
<span id="cb1-21">    } <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> {</span>
<span id="cb1-22">        rst <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> terra<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rast</span>(x,</span>
<span id="cb1-23">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type =</span> type, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">crs =</span> crs, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">digits =</span> digits, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">extent=</span>extent</span>
<span id="cb1-24">        )</span>
<span id="cb1-25">    }</span>
<span id="cb1-26">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">return</span>(rst)</span>
<span id="cb1-27">}</span>
<span id="cb1-28"></span>
<span id="cb1-29"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rast_singlecoord_safe</span>(mydf,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">resolution =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)</span></code></pre></div>



 ]]></description>
  <category>R</category>
  <category>terra</category>
  <guid>https://giuliogenova.com/blog/posts/R/index.html</guid>
  <pubDate>Fri, 11 Aug 2023 23:00:00 GMT</pubDate>
  <media:content url="https://rspatial.github.io/terra/reference/figures/logo.png" medium="image" type="image/png"/>
</item>
</channel>
</rss>
